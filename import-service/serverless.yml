

service: import-service

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: eu-west-1
  lambdaHashingVersion: 20201221

  environment:
    PG_HOST: 
    PG_PORT: 
    PG_DATABASE: 
    PG_USERNAME: 
    PG_PASSWORD: 
    SQS_URL: 
      Ref: SQSQueue
    SNS_ARN:
      Ref: SNSTopic 

  iamRoleStatements:
  - Effect: Allow
    Action: s3:ListBucket
    Resource:
      - arn:aws:s3:::node-aws-course
  - Effect: Allow
    Action:
      - s3:*
    Resource:
      - arn:aws:s3:::node-aws-course/*
  - Effect: Allow
    Action: sqs:*
    Resource:
      Fn::GetAtt:
        - SQSQueue
        - Arn
  - Effect: Allow
    Action: sns:*
    Resource:
      Ref: SNSTopic
package:
  individually: true



functions:
  importProductsFile:
    handler: functions/importProductsFile.handler
    events:
      - http:
          path: import
          method: GET
          authorizer:
            name: basicAuthorizer
            arn: arn:aws:lambda:eu-west-1:009866512610:function:authorization-service-dev-basicAuthorizer
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token
          cors: true
          parameters:
            queryStrings:
              name: true

  importFileParser:
    handler: functions/importFileParser.handler
    events:
      - s3:
          bucket: node-aws-course
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true

  importBatchProcess:
    handler: functions/importBatchProcess.handler
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt:
              - SQSQueue
              - Arn        

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: "AWS::ApiGateway::GatewayResponse"
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: "ApiGatewayRestApi"
          
    GatewayResponseDefault5XX:
      Type: "AWS::ApiGateway::GatewayResponse"
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_5XX
        RestApiId:
          Ref: "ApiGatewayRestApi"

    SQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: import-service-queue
    
    SNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: import-service-topic

    SNSSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: gex_92@mail.ru
        Protocol: email
        TopicArn:
          Ref: SNSTopic
        FilterPolicy:
          status: 
            - "In process"

    SNSFinishSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: e.ortsukh@gmail.com
        Protocol: email
        TopicArn:
          Ref: SNSTopic
        FilterPolicy:
          status: 
            - "Done"     
                 